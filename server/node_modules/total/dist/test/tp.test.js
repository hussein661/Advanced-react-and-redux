"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const child_process_1 = require("child_process");
describe('tp', () => {
    test('tp. Character count.', () => {
        return new Promise((resolve, reject) => {
            child_process_1.exec('echo "hello\nworld" | node ./dist/cli.js tp -c', (err, stdout, stderr) => {
                if (err)
                    return reject(err);
                if (stderr)
                    return reject(stderr);
                expect(parseInt(stdout)).toBe(12);
                resolve();
            });
        });
    });
    test('tp -L. Longest line.', () => {
        return new Promise((resolve, reject) => {
            child_process_1.exec('echo "hello\nworld" | node ./dist/cli.js tp -L', (err, stdout, stderr) => {
                if (err)
                    return reject(err);
                if (stderr)
                    return reject(stderr);
                expect(parseInt(stdout)).toBe(5);
                resolve();
            });
        });
    });
    test('tp -l. Returns the number of lines.', () => {
        return new Promise((resolve, reject) => {
            child_process_1.exec('echo "hello\nworld" | node ./dist/cli.js tp -l', (err, stdout, stderr) => {
                if (err)
                    return reject(err);
                if (stderr)
                    return reject(stderr);
                expect(parseInt(stdout)).toBe(3);
                resolve();
            });
        });
    });
    test('tp  -w. Word count.', () => {
        return new Promise((resolve, reject) => {
            child_process_1.exec('echo "hello\nworld th3d" | node ./dist/cli.js tp -w', (err, stdout, stderr) => {
                if (err)
                    return reject(err);
                if (stderr)
                    return reject(stderr);
                expect(parseInt(stdout)).toBe(3);
                resolve();
            });
        });
    });
});
